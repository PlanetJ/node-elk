{
  "name": "named-regexp",
  "version": "0.1.1",
  "description": "Append named-capture feature to JavaScript RegExp",
  "main": "lib/named-regexp.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "node test/test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/cho45/named-regexp.js.git"
  },
  "keywords": [
    "RegExp",
    "capture",
    "named-capture"
  ],
  "author": {
    "name": "cho45"
  },
  "license": "MIT",
  "readme": "named-regexp.js\n=================\n\nAppend named-capture feature to JavaScript RegExp\n\nSYNOPSYS\n========\n\n    var named = require('named-regexp').named;\n\n    var re = named(/(:<foo>[a-z]+) (:<foo>[a-z]+) (:<bar>[a-z]+)/ig);\n    var matched = re.exec('aaa bbb ccc');\n    console.log(matched.captures); //=> { foo: [ 'aaa', 'bbb' ], bar: [ 'ccc' ] }\n    console.log(matched.capture('foo')); //=> 'bbb' // last matched\n\n\n    var replaced = re.replace('aaa bbb ccc ddd eee fff ggg', function (matched) {\n        return matched.capture('bar');\n    });\n\n    console.log(replaced); //=> 'ccc fff ggg');\n\n\nDESCRIPTION\n===========\n\nnamed-regexp.js provides `named` function which converts regexp containing named-captures to normal regexp which has some functions.\n\nnamed-capture is defined by `(:<name>regexp)`. You can't use it with normal captures. If you want to use grouping, use `(?:regexp)` instead.\n\n## Function named()\n\nTakes RegExp object which contains named-captures.\n\nReturns new RegExp object with following methods:\n\n### Method re.exec(string)\n\nPerforms a regexp match of string and returns an Array object containing the results of the match, or null if string did not match.\n\nA returning Array object is same as value from normal RegExp.prototype.exec but it has `captures` property and `capture` method.\n\n#### matched.captures\n\nAn object contains captured values which has capture name as key and array of captured string as its value.\n\n#### matched.capture('name')\n\nReturns last matched string of the name.\n\n### Method re.replace(string, replace)\n\nSame as `String.prototype.replace` but when `replace` is function, this method passes an Array object like value returning from `exec()`.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/cho45/named-regexp.js/issues"
  },
  "_id": "named-regexp@0.1.1",
  "dist": {
    "shasum": "b9a08a12352afe4e800d019049de8e59c3ca46d3"
  },
  "_from": "named-regexp@*",
  "_resolved": "https://registry.npmjs.org/named-regexp/-/named-regexp-0.1.1.tgz"
}
